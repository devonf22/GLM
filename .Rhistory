pairs(z, lower.panel = panel.smooth2, upper.panel = panel.cor, diag.panel = panel.hist)
stress <- read.csv(file = "Stress.csv", header = TRUE)
stress <- read.csv(file = "Stress.csv", header = TRUE)
stress <- read.csv(file = "Stress.csv", header = TRUE)
z <- c(265,49,21,19,10,10,2,2,4,2,1,4,3,1,2)
a <- c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14)
length(a)
str(z)
str(a)
hist(a, z)
hist(z, )
hist(a, )
hist(a, z)
his(a, breaks = "sturges", freq = NULL, probability = !freq, include.lowest = TRUE, right = TRUE, density = NULL, angle = 45, col = NULL, border = NULL)
hist(a, breaks = "sturges", freq = NULL, probability = !freq, include.lowest = TRUE, right = TRUE, density = NULL, angle = 45, col = NULL, border = NULL)
hist(a, breaks = "Sturges", freq = NULL, probability = !freq, include.lowest = TRUE, right = TRUE, density = NULL, angle = 45, col = NULL, border = NULL)
hist(a, breaks = 15)
hist(a, breaks = 15, col = "lightblue")
hist(z, breaks = "a", col = "lightblue")
hist(z, breaks = 15, col = "lightblue")
hist(a, breaks = 15, col = "lightblue")
con <- cbind(a, z)
str(con)
class(con)
con
hist(a, z)
hist(a, breaks = 15, col = "lightblue")
hist(z, )
hist(con, )
hist(con, breaks = 15, col = "lightblue")
mode(con)
mean(con)
hist(con, breaks = 15, col = "lightblue")
cons <- cbind(z, a)
str(cons)
class(cons)
cons
hist(cons, breaks = 15, col = "lightblue")
hist(con)
con <- bind(a, z)
str(con)
class(con)
con
hist(con)
hist(con, breaks = 15, col = "lightblue")
mode(con)
con <- as.data.frame(cbind(a, z))
str(test.data)
str(con)
con1 <- data.frame(names, numbers)
con1 <- data.frame(a, z)
con1$a <- as.character(test.3$a)
str(con1)
hist(con1)
hist(con1, breaks = 15, col = "lightblue")
con1$a <- as.numeric(test.3$a)
con1$a <- as.numeric(con1$a)
str(con1)
hist(con1)
hist(con1, breaks = 15, col = "lightblue")
hist(con)
hist(con, breaks = 15, col = "lightblue")
con <- bind(a, z)
con <- cbind(a, z)
hist(con, breaks = 15, col = "lightblue")
rnorm(2, )
rnorm(2, mean 10, sd = 1)
rnorm(2, mean = 10, sd = 1)
rnorm(2, mean = 10)
rnorm(2, mean = 10, sd = 2)
rnorm(10, mean = 10, sd = 2)
mean.t <- 3
sd.t <- 1.3
n.t <- 4
sample.1 <- rnorm(n = n.t, mean = mean.t, sd = 1.3)
sample.1 <- rnorm(n = n.t, mean = mean.t, sd = sd.t)
mean(sample.1)
sd(sample.1)
sample.1 <- rnorm(n = n.t, mean = mean.t, sd = sd.t)
mean(sample.1)
sd(sample.1)
sample.1 <- rnorm(n = n.t, mean = mean.t, sd = sd.t)
mean(sample.1)
sd(sample.1)
for(counter in 1:10){
print(counter)
}
for(counter in 1:10){
print(counter)
print(counter^2)
}
counter^2
for(counter in 1:number.samples){
sample.1 <- rnorm(n.t, mean.t, sd.t)
mean(sample.1)
sd(sample.1)
}
for(counter in 1:number.sample.1){
sample.1 <- rnorm(n.t, mean.t, sd.t)
mean(sample.1)
sd(sample.1)
}
for(counter in 1:number.samples){
sample.t <- rnorm(n.t, mean.t, sd.t)
print(mean(sample.t))
sd(sample.t)
}
number.samples <- 10
for(counter in 1:number.samples){
sample.t <- rnorm(n.t, mean.t, sd.t)
print(mean(sample.t))
sd(sample.t)
}
mean.collect <- rep(NA, 10)
for(counter in 1:number.samples){
counter <- 1
sample.t <- rnorm(n.t, mean.t, sd.t)
mean.collect[counter] <- mean(sample.t)
sd(sample.t)
}
for(counter in 1:number.samples){
counter <- 1
sample.t <- rnorm(n.t, mean.t, sd.t)
mean.collect[counter] <- mean(sample.t)
}
mean.collect
mean(sample.t)
mean.collect <- rep(NA, 10)
sample.distr <- 100
mean.collect <- rep(NA, sample.distr)
for(counter in 1:number.samples){
counter <- 1
sample.t <- rnorm(n.t, mean.t, sd.t)
mean.collect[counter] <- mean(sample.t)
}
mean.collect
str(mean.collect)
mean(mean.collect)
hist(mean.collect)
sd(mean.collect)
for(counter in 1:number.samples){
# counter <- 1
sample.t <- rnorm(n.t, mean.t, sd.t)
mean.collect[counter] <- mean(sample.t)
}
mean.collect
str(mean.collect)
mean(mean.collect)
hist(mean.collect)
sd(mean.collect)
mean.collect
str(mean.collect)
mean(mean.collect)
hist(mean.collect, main = "n = 40")
sd(mean.collect)
number.samples <- 100
sample.distr <- 100
mean.collect <- rep(NA, sample.distr)
for(counter in 1:number.samples){
# counter <- 1
sample.t <- rnorm(n.t, mean.t, sd.t)
mean.collect[counter] <- mean(sample.t)
}
mean.collect
str(mean.collect)
mean(mean.collect)
hist(mean.collect)
sd(mean.collect)
mean.collect
str(mean.collect)
mean(mean.collect)
hist(mean.collect, main = "n = 40")
sd(mean.collect)
n.d <- 40
hist(mean.collect, main = paste("n =", n.d, "this puts something here" )
breaks.t <- seq(0, 7, 0.5)
hist(mean.collect, breaks = breaks.t)
breaks.t <- seq(0, 7, 0.5)
hist(mean.collect, breaks = breaks.t)
hist(mean.collect, main = paste("n =", n.d, "times sampled = ", sample.distr, sep = "This puts stuff here")
sample.distr <- 100
mean.collect <- rep(NA, sample.distr)
for(counter in 1:number.samples){
# counter <- 1
sample.t <- rnorm(n.t, mean.t, sd.t)
mean.collect[counter] <- mean(sample.t)
}
hist(mean.collect, main = paste("n =", n.d, "times sampled = ", sample.distr, sep = "This puts stuff here")
breaks.t <- seq(0, 7, 0.5)
setwd("~/Desktop/R code")
fish <- read.csv("/data.fish.csv")
list.files()
fish <- read.csv("data.fish.csv)
)
)))))
}}])
""
""""
fish <- read.csv("data.fish.csv")
(fish <- read.csv("data.fish.csv"))
View(fish)
plot(fish$age, fish$number.eggs)
plot(fish$age, fish$number.eggs, col = "red")
plot(fish$age, fish$number.eggs, col = "red", alpha.f = 0.2)
plot(fish$age, fish$number.eggs, col = "red", alpha.f = 0.1)
adjustcolor( "red", alpha.f = 0.2)
plot(fish$age, fish$number.eggs, col = "red"[adjustcolor( "red", alpha.f = 0.2)])
plot(fish$age, fish$number.eggs, col = "red"[adjustcolor( "red", alpha.f = 0.5
)])
plot(fish$age, fish$number.eggs, col = "red"[adjustcolor( "red", alpha.f = 0.5)])
plot(fish$age, fish$number.eggs, col = "red"[adjustcolor( "red", alpha.f = 1)])
plot(fish$age, fish$number.eggs, col = "red"[adjustcolor( "red", alpha.f = 0)])
plot(fish$age, fish$number.eggs, col = "red")
adjustcolor( "red", alpha.f = 0.2)
adjustcolor( "red", alpha.f = 0)
plot(fish$age, fish$number.eggs, adjustcolor( "red", alpha.f = 0))
plot(fish$age, fish$number.eggs, col = "red")
plot(fish$age, fish$number.eggs, col = "red", xlab = "Age of fish (yrs)")
plot(fish$age, fish$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
plot(fish$age[fish$year == "2011"], fish$number.eggs[fish$year == "2011"], col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
fish$age[fish$year == "2011"], fish$number.eggs[fish$year == "2011"]
fish$age[fish$year == "2011"]
fish$number.eggs[fish$year == "2011"]
str(fish)
head(fish)
d <- read.csv("death.tree.csv")
str(d)
head(d)
d <- read.csv("death.tree.csv", sep = "")
str(d)
head(d)
d <- read.csv("death.tree.csv", sep = ""), stri
d <- read.csv("death.tree.csv", sep = "", stringsAsFactors = FALSE)
str(d)
head(d)
d <- read.csv("death.tree.csv")
str(d)
head(d)
unique(d$site)
unique(d$site)
length()
length(unique(d$site))
xt <- d$site
xt <- factor(d$site)
str(xt)
levels(xt)
levels(xt) <- c("Forest", "Near.hotel", "Forgot.Where")
d1 <- d[d$site == 2, ]
length(d1$live[d1$live == 0])
length(d1$live[d1$live ==1])
table(d1$live)
plot(d1$diam, d1$live)
?jitter
jitter(rep(1,10), amount = 0.5)
jitter(rep(1,10), amount = 0.9)
(t <- rep(1,10))
jitter(t, amount = 0.9)
jitter.t <- 0.1
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16)
col.t <- c("#FF0000")
col.t <- c("#FF0000", "#00FF00")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t[1], alpha.t[1], sep = ""))
col.t <- c("#FF0000", "#00FF00")
alpha.t <- 77
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t[1], alpha.t[1], sep = ""))
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t[1], alpha.t[1], sep = ""))
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
jitter.t <- 0.2
alpha.t <- 77
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
alpha.t <- 100
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t[1], alpha.t[1], sep = ""))
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
alpha.t <- 1
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t[1], alpha.t[1], sep = ""))
alpha.t <- 77
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
alpha.t <- c(77, "FF")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t[1], alpha.t[1], sep = ""))
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
alpha.t <- c(40, "FF")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
alpha.t <- c(99, "FF")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""))
glm.0 <- glm(d1$live ~ d1$diam, family = binomial)
glm.0 <- glm(live ~ diam, data = d1, family = binomial)
summary(glm.0)
x.r <- range(d1$diam)
y.val <- c((-1.72924 + 0.09611*x.r[1]), (-1.72924 + 0.09611*x.r[2]))
lines(x.r, y.val)
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16, col = paste(col.t, alpha.t[1], sep = ""), xlab = "Tree Diameter")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""),
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
jitter.t <- 0.25
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""),
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
lines(x.r, y.val)
glm.0$deviance / glm.0$df.residual
str(glm.0)
glm.0$fitted.values
lines(d1$diam, glm.0$fitted.values, col = "Red")
lines(d1$diam, glm.0$fitted.values, col = "Yellow")
lines(d1$diam, glm.0$fitted.values, col = "Yellow3")
lines(d1$diam, glm.0$fitted.values, col = "Yellow1")
lines(d1$diam, glm.0$fitted.values, col = "Yellow")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""),
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
lines(d1$diam, glm.0$fitted.values, col = "Yellow")
glm.1 <- glm(live ~ 1, data = d1, family = binomial)
summary(glm.1)
anova(glm.0, glm.1, test = "Chisq")
jitter.t <- 0.4
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""),
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
lines(d1$diam, glm.0$fitted.values, col = "Yellow")
diam.range.for.predict <- seq(min(d1$diam, max(d1$diam)), 0.1)
pred.response <- predict(glm.0, list(diam.range.for.predict), type = "response")
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 1)
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 10)
pred.response <- predict(glm.0, list(diam = diam.range.for.predict), type = "response")
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 10)
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 100)
lines(diam.range.for.predict, pred.response, col = "Red", lwd = 100)
diam.range.for.predict <- seq(min(d1$diam), max(d1$diam)), 0.1)
pred.response <- predict(glm.0, list(diam = diam.range.for.predict), type = "response")
lines(diam.range.for.predict, pred.response, col = "Red", lwd = 100)
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = "", las = 1),
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 1,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""),
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 2,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 1,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
diam.range.for.predict <- seq(min(d1$diam), max(d1$diam), 0.1)
pred.response <- predict(glm.0, list(diam = diam.range.for.predict), type = "response")
lines(diam.range.for.predict, pred.response, col = "Red", lwd = 100)
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 10)
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 1,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 10)
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 7)
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 1,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 7)
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 1,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
lines(d1$diam, glm.0$fitted.values, col = "Yellow")
lines(d1$diam, glm.0$fitted.values, col = "Yellow", lwd = 5)
lines(diam.range.for.predict, pred.response, col = "Red", lwd = 5)
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 1,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
lines(diam.range.for.predict, pred.response, col = "Yellow", lwd = 5)
fish <- read.csv("data.fish.csv", stringsAsFactors = FALSE)
View(fish)
plot(fish$age[fish$year == "2011"], fish$number.eggs[fish$year == "2011"], col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
f1 <- fish[fish$year == "2011"]
f1 <- fish[fish$year == 2011]
head(d)
f1 <- fish[fish$year == 2011, ]
setwd("~/Desktop/GitHub/GLM")
setwd("~/Desktop/GitHub/GLM")
setwd("~/Desktop/GitHub/GLM") #Alicia's Directory
fish <- read.csv("data.fish.csv", stringsAsFactors = FALSE)
View(fish)
f1 <- fish[fish$year == 2011, ]
plot(fish$age[fish$year == "2011"], fish$number.eggs[fish$year == "2011"], col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
setwd("~/Desktop/GitHub/DA.GLM.fish")
setwd("~/Desktop/GitHub/DA.GLM.fish") #Alicia's Directory
fish <- read.csv("data.fish.csv", stringsAsFactors = FALSE)
View(fish)
str(fish)
head(fish)
f1 <- fish[fish$year == 2011, ]
plot(fish$age[fish$year == "2011"], fish$number.eggs[fish$year == "2011"], col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
hist(f1$number.eggs)
hist(f1$number.eggs, col = "Purple")
hist(f1$number.eggs, col = "Purple2")
hist(f1$number.eggs, col = "Purple3")
hist(f1$number.eggs, col = "Purple3", main = "Number of Eggs per Fish")
hist(f1$number.eggs, col = "Purple3", main = "Number of Eggs per Fish", las = 1)
hist(f1$number.eggs, col = "Purple3", xlab = "# of eggs", main = "Number of Eggs per Fish", las = 1)
summary(glm.0)
f2 <- f1[fish$number.eggs > 0]
f2 <- f1[fish$number.eggs > 0, ]
View(f2)
f2 <- f1[f1$number.eggs > 0, ]
View(f2)
hist(f2$number.eggs, col = "Purple3", xlab = "# of eggs", main = "Number of Eggs per Fish", las = 1))
hist(f2$number.eggs, col = "Purple3", xlab = "# of eggs", main = "Number of Eggs per Fish", las = 1)
table(d1$live)
plot(d1$diam, d1$live)
(t <- rep(1,10))
jitter(t, amount = 0.1)
jitter.t <- 0.4
plot(d1$diam, jitter(d1$live, jitter.t[1]), pch = 16,
col = paste(col.t, alpha.t[1], sep = ""), las = 1,
xlab = "Tree Diameter", ylab = "Tree 0 = Alive, 1 = Dead")
plot(f2$age, f2$number.eggs)
getwd()
getwd()
setwd("~/Desktop/GitHub/GLM")
getwd()
wd <- getwd() # get working directory
fish <- read.csv("data.fish.csv", stringsAsFactors = FALSE) # read data file into object called fish
View(fish) # view the data
str(fish)
head(fish)
f1 <- fish[fish$year == 2011, ]
plot(f1$age, f1$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
hist(f1$number.eggs, col = "Purple3", xlab = "# of eggs", main = "Number of Eggs per Fish", las = 1)
View(f2)
glm.0 <- glm(number.eggs ~ age, data = f2, family = quasipoisson)
summary(glm.0)
x.r <- range(f2$age)
y.val <- c((1.27788 + 0.22643*x.r[1]), (1.27788 + 0.22643*x.r[2]))
lines(x.r, y.val)
plot(f2$age, f2$number.eggs)
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
lines(x.r, y.val)
(x.r <- range(f2$age))
y.val <- c((1.27788 + 0.22643*x.r[1]), (1.27788 + 0.22643*x.r[2]))
lines(x.r, y.val)
glm.0 <- glm(number.eggs ~ age, data = f2, family = quasipoisson)
summary(glm.0)
View(f2)
glm.0 <- glm(f2$number.eggs ~ f2$age, family = quasipoisson)
glm.0 <- glm(f2$number.eggs ~ f2$age, family = quasipoisson)
summary(glm.0)
glm.0 <- glm(f2$number.eggs ~ f2$age, family = quasibinomial)
glm.0 <- glm(f2$number.eggs ~ f2$age, family = negativebinomial)
glm.0 <- glm(f2$number.eggs ~ f2$age, family = negative binomial)
apropos(negative binomial)
apropos("negative binomial")
glm.0 <- glm(f2$number.eggs ~ f2$age, family = quasipoisson)
summary(glm.0)
View(fish) # view the data
glm.0$deviance / glm.0$df.residual
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson)
summary(glm.0)
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson(link = "loglog"))
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson(link = "log"))
summary(glm.0)
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson(link = "log log"))
glm.0a <- glm(f2$number.eggs ~ f2$age, family = quasipoisson(link = "log"))
glm.0a <- glm(f2$number.eggs ~ f2$age, family = quasipoisson(link = "loglog"))
glm.0a <- glm(f2$number.eggs ~ f2$age, family = quasipoisson(link = "log log"))
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson(link = "log"))
summary(glm.0)
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
f1 <- fish[fish$year == 2011, ]
f2 <- f1[f1$number.eggs > 0, ]
View(f2)
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
lines(x.r, y.val)
(x.r <- range(f2$age))
glm.0 <- glm(f2$number.eggs ~ f2$age, family = poisson)
glm.0a <- glm(f2$number.eggs ~ f2$age, family = quasipoisson(link = "log"))
e^0.22643
E^0.22643
apropos( e)
apropos( "e")
e <- exp(1)
e^0.22643
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson(link = "sqrt"))
summary(glm.0)
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson(link = "indentity"))
glm.0a <- glm(f2$number.eggs ~ f2$age, family = poisson(link = "sqrt"))
glm.0a <- glm(f2$number.eggs ~ f2$age, family = quasipoisson(link = "sqrt"))
summary(glm.0)
e <- exp(1)
str(glm.0)
glm.0$fitted.values
lines(f2$age, glm.0$fitted.values, col = "Yellow", lwd = 5)
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
lines(f2$age, glm.0$fitted.values, col = "Green", lwd = 2)
lines(f2$number.eggs, glm.0$fitted.values, col = "Green", lwd = 2)
lines(f2$age, glm.0$fitted.values, col = "Green", lwd = 2)
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
lines(f2$age, glm.0$fitted.values, col = "Green", lwd = 2)
str(glm.0)
glm.0$fitted.values
age.range.for.predict <- seq(min(f2$age), max(f2$age), 0.1)
pred.response <- predict(glm.0, list(age = age.range.for.predict), type = "response")
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
lines(age.range.for.predict, pred.response, col = "Green", lwd = 2)
mean(glm.0$fitted.values)
lines(f2$age, glm.0$fitted.values, col = "Green", lwd = 2)
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs")
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs", las = 1)
plot(f2$age, f2$number.eggs, col = "red", xlab = "Age of fish (yrs)", ylab = "# of eggs", las = 1)
lines(f2$age, mean(glm.0$fitted.values), col = "Green", lwd = 2)
str(glm.0)
glm.0$fitted.values
lines(d1$diam, glm.0$fitted.values, col = "Yellow", lwd = 5)
